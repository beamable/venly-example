//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.VenlyFederation.VenlyFederation"/> </summary
    public sealed class VenlyFederationClient : MicroserviceClient, Beamable.Common.IHaveServiceName, Beamable.Common.ISupportsFederatedLogin<VenlyFederationCommon.VenlyCloudIdentity>, Beamable.Common.ISupportsFederatedInventory<VenlyFederationCommon.VenlyCloudIdentity>
    {
        
        public VenlyFederationClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        public string ServiceName
        {
            get
            {
                return "VenlyFederation";
            }
        }
        
        /// <summary>
        /// Call the TransferItemToPlayer method on the VenlyFederation microservice
        /// <see cref="Beamable.VenlyFederation.VenlyFederation.TransferItemToPlayer"/>
        /// </summary>
        public Beamable.Common.Promise<System.Threading.Tasks.Task> TransferItemToPlayer(int itemId, long destinationPlayerId)
        {
            object raw_itemId = itemId;
            object raw_destinationPlayerId = destinationPlayerId;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("itemId", raw_itemId);
            serializedFields.Add("destinationPlayerId", raw_destinationPlayerId);
            return this.Request<System.Threading.Tasks.Task>("VenlyFederation", "TransferItemToPlayer", serializedFields);
        }
        
        /// <summary>
        /// Call the TransferItemExternal method on the VenlyFederation microservice
        /// <see cref="Beamable.VenlyFederation.VenlyFederation.TransferItemExternal"/>
        /// </summary>
        public Beamable.Common.Promise<System.Threading.Tasks.Task> TransferItemExternal(int itemId, string destinationWalletAddress)
        {
            object raw_itemId = itemId;
            object raw_destinationWalletAddress = destinationWalletAddress;
            System.Collections.Generic.Dictionary<string, object> serializedFields = new System.Collections.Generic.Dictionary<string, object>();
            serializedFields.Add("itemId", raw_itemId);
            serializedFields.Add("destinationWalletAddress", raw_destinationWalletAddress);
            return this.Request<System.Threading.Tasks.Task>("VenlyFederation", "TransferItemExternal", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersVenlyFederationClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int32 : MicroserviceClientDataWrapper<int>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_Int64 : MicroserviceClientDataWrapper<long>
        {
        }
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForVenlyFederationClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<VenlyFederationClient>();
        }
        
        public static VenlyFederationClient VenlyFederation(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<VenlyFederationClient>();
        }
    }
}
